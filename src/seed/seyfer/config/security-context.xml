<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:authentication-manager>
		<!-- <security:authentication-provider> -->
		<!-- <security:user-service id="staticUserService"> -->
		<!-- <security:user name="seyfer" authorities="admin" -->
		<!-- password="root" /> -->
		<!-- <security:user name="admin" authorities="admin" -->
		<!-- password="admin" /> -->
		<!-- </security:user-service> -->
		<!-- </security:authentication-provider> -->
		<security:authentication-provider
			user-service-ref="userDetailService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
			<!-- <security:jdbc-user-service id="jdbcUserService" -->
			<!-- data-source-ref="dataSource" -->
			<!-- authorities-by-username-query="select username,authority from users 
				where binary username = ?" -->
			<!-- users-by-username-query="select username, password, enabled from 
				users where binary username = ?" /> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- For hashing and salting the password -->
	<!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->
	<!-- <security:authentication-manager> -->
	<!-- <security:authentication-provider ref="authProvider"></security:authentication-provider> -->
	<!-- </security:authentication-manager> -->
	<!-- <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> -->
	<!-- <property name="userDetailsService" ref="userDetailService" /> -->
	<!-- <property name="passwordEncoder" ref="passwordEncoder" /> -->
	<!-- </bean> -->

	<security:http use-expressions="true">

		<!-- <security:intercept-url pattern="/admin" -->
		<!-- access="permitAll" /> -->

		<security:intercept-url pattern="/admin"
			access="hasAuthority('admin') OR hasRole('ADMIN')" />

		<security:intercept-url pattern="/createOffer"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/doCreateOffer"
			access="isAuthenticated()" />

		<security:intercept-url pattern="/getMessages"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/messages"
			access="isAuthenticated()" />

		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/static/**"
			access="permitAll" />
		<security:intercept-url pattern="/offers"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/message"
			access="permitAll" />

		<!-- <security:intercept-url pattern="/logout" -->
		<!-- access="permitAll" /> -->
		<security:intercept-url pattern="/loggedout"
			access="permitAll" />
		<security:intercept-url pattern="/accessDenied"
			access="permitAll" />
		<security:intercept-url pattern="/newAccount"
			access="permitAll" />
		<security:intercept-url pattern="/doCreateAccount"
			access="permitAll" />
		<security:intercept-url pattern="/accountCreated"
			access="permitAll" />

		<security:intercept-url pattern="/**" access="denyAll" />

		<security:form-login login-page="/login"
			authentication-failure-url="/login?error=true"
			authentication-success-handler-ref="loginSuccessHandler"
			always-use-default-target="true" />
		<!-- <security:csrf disabled="true" /> -->
		<security:logout logout-success-url="/loggedout" />

		<security:access-denied-handler
			error-page="/accessDenied" />
		<security:remember-me key="offersAppKey"
			user-service-ref="userDetailService" />

	</security:http>

	<security:global-method-security
		secured-annotations="enabled"></security:global-method-security>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>
</beans>
